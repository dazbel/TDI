USE [Samsung_Dev]
GO

/****** Object:  StoredProcedure [dbo].[AC_PRODUCT_UPDATE]    Script Date: 2017-01-25 4:53:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Diana Azbel
-- Create date: 2017-01-25
-- Description:	Update AC Product. Add new and update modified records
-- =============================================
CREATE PROCEDURE [dbo].[AC_PRODUCT_UPDATE]
	-- current date is date AC_Product updated, by default it is the date this sp is running 
	@currentDate datetime = null
AS
BEGIN
    IF @currentDate is null
    SET @currentDate = GETDATE()
	DECLARE @SummaryOfChanges TABLE(Change VARCHAR(20));  
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	--Update last modified records
	MERGE INTO AC_PRODUCT AC_P  
    USING (
          SELECT PRODUCT_ID,PRODUCT_NAME,SKU_ID,MODEL_NUMBER,PRODUCT_DESCRIPTION
					,SOURCE_COUNTRY,SRP,PRICE_DESC,PROMO_PRICE,PRODUCT_URL
					,DETAIL_URL,IMAGE_URL,PROD_URL_VALID,PROD_URL_TESTED,ACCESSORY_FLAG
					,FAMILY_NAME,SUPPORT_ONLY,FRIENDLY_NAME,SAVING_AMOUNT,PERCENT_OFF
					,ECOMMERCEFLAG,EOL_FLG,SRC_SYS_PRODUCT_ID
            FROM [DBO].[PRODUCT] 
           WHERE  CONVERT(DATE, [CREATED_DATE]) = CONVERT(DATE, @currentDate) OR  CONVERT(DATE, [MODIFIED_DATE]) = CONVERT(DATE, @currentDate)
         ) P 
      ON AC_P.PRODUCT_ID = P.PRODUCT_ID
   WHEN MATCHED THEN
   UPDATE 
      SET PRODUCT_NAME = P.PRODUCT_NAME,
		SKU_ID = P.SKU_ID,
		MODEL_NUMBER = P.MODEL_NUMBER, 
		PRODUCT_DESCRIPTION = P.PRODUCT_DESCRIPTION,
		SOURCE_COUNTRY = P.SOURCE_COUNTRY,
		SRP = P.SRP,
		PRICE_DESC = P.PRICE_DESC,
		PROMO_PRICE = P.PROMO_PRICE,
		PRODUCT_URL = P.PRODUCT_URL,
		DETAIL_URL = P.DETAIL_URL,
		IMAGE_URL = P.IMAGE_URL,
		PROD_URL_VALID = P.PROD_URL_VALID,
		PROD_URL_TESTED = P.PROD_URL_TESTED,
		ACCESSORY_FLAG = P.ACCESSORY_FLAG,
		FAMILY_NAME = P.FAMILY_NAME,
		SUPPORT_ONLY = P.SUPPORT_ONLY,
		FRIENDLY_NAME = P.FRIENDLY_NAME,
		SAVING_AMOUNT = P.SAVING_AMOUNT,
		PERCENT_OFF = P.PERCENT_OFF,
		ECOMMERCEFLAG = P.ECOMMERCEFLAG,
		EOL_FLG = P.EOL_FLG,
		SRC_SYS_PRODUCT_ID = P.SRC_SYS_PRODUCT_ID,
		DATAMART_ACCOUNT_DATE = @currentDate
	WHEN NOT MATCHED BY TARGET THEN  
   INSERT ( PRODUCT_ID,PRODUCT_NAME,SKU_ID,MODEL_NUMBER,PRODUCT_DESCRIPTION
					,SOURCE_COUNTRY,SRP,PRICE_DESC,PROMO_PRICE,PRODUCT_URL
					,DETAIL_URL,IMAGE_URL,PROD_URL_VALID,PROD_URL_TESTED,ACCESSORY_FLAG
					,FAMILY_NAME,SUPPORT_ONLY,FRIENDLY_NAME,SAVING_AMOUNT,PERCENT_OFF
					,ECOMMERCEFLAG,EOL_FLG,SRC_SYS_PRODUCT_ID,DATAMART_ACCOUNT_DATE) 
  VALUES (PRODUCT_ID,PRODUCT_NAME,SKU_ID,MODEL_NUMBER,PRODUCT_DESCRIPTION
					,SOURCE_COUNTRY,SRP,PRICE_DESC,PROMO_PRICE,PRODUCT_URL
					,DETAIL_URL,IMAGE_URL,PROD_URL_VALID,PROD_URL_TESTED,ACCESSORY_FLAG
					,FAMILY_NAME,SUPPORT_ONLY,FRIENDLY_NAME,SAVING_AMOUNT,PERCENT_OFF
					,ECOMMERCEFLAG,EOL_FLG,SRC_SYS_PRODUCT_ID,@currentDate)  
   OUTPUT $action INTO @SummaryOfChanges;  
  
-- Query the results of the table variable.  
	SELECT Change, COUNT(*) AS CountPerChange  
	FROM @SummaryOfChanges  
	GROUP BY Change;  
    -- Insert statements for procedure here
 END

GO

